"use strict";
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('./signature-pad');
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var signature_pad_1 = require("./signature-pad");
var SignaturePadModule = /** @class */ (function () {
    function SignaturePadModule() {
    }
SignaturePadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SignaturePadModule });
SignaturePadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SignaturePadModule_Factory(t) { return new (t || SignaturePadModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SignaturePadModule, { declarations: [ɵngcc1.SignaturePad], exports: [ɵngcc1.SignaturePad] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SignaturePadModule, [{
        type: core_1.NgModule,
        args: [{
                imports: [],
                declarations: [signature_pad_1.SignaturePad],
                exports: [signature_pad_1.SignaturePad]
            }]
    }], function () { return []; }, null); })();
    return SignaturePadModule;
}());
exports.SignaturePadModule = SignaturePadModule;
exports.SignaturePad = ɵngcc1.SignaturePad;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzQ0FBeUM7QUFDekMsaURBQStDLGpEQUEvQyxpREFBK0M7QUFRL0MsQUFBQTtJQUFBLEpBQ21CLElBRG5CO0lBQWtDLENBQUMsTEFBRixJQUFDLENBQUM7S0FBdEIsa0JBQWtCLHlCQU45QixlQUFRLENBQUMsZUFDUiwxRUFLVyxrQkFBa0IseUJBTjlCLGVBQVEsQ0FBQyxlQUNSO0tBQU8sRUFBRSxFQUFHLGVBQ1osWUFBWSxFQUFFLENBQUUsNEJBQVksQ0FBRSxlQUM5QixPQUFPLEVBQUUsQ0FBRSw0QkFBWSxDQUFFLFlBQzFCLENBQUMsU0FFVyxrQkFBa0IsN0pBTHRCLEVBQUUsRUFBRyxlQUNaLFlBQVksRUFBRSxDQUFFLDRCQUFZLENBQUUsZUFDOUIsT0FBTyxFQUFFLENBQUUsNEJBQVksQ0FBRSxZQUMxQixDQUFDLFNBRVcsa0JBQWtCO0FBQUksT0FBRCx5QkFBQyxJQUFBLEFBQW5DLElBQW1DLEVBQXRCLGdEQUFrQiwxRkFBSTs7Ozs7Ozs7Z0RBQ25DO0FBQUUsSUFEZ0MseUJBQUM7QUFDakMsQ0FEaUMsQUFBbkMsSUFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2lnbmF0dXJlUGFkIH0gZnJvbSAnLi9zaWduYXR1cmUtcGFkJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogWyBdLFxuICBkZWNsYXJhdGlvbnM6IFsgU2lnbmF0dXJlUGFkIF0sXG4gIGV4cG9ydHM6IFsgU2lnbmF0dXJlUGFkIF0sXG59KVxuXG5leHBvcnQgY2xhc3MgU2lnbmF0dXJlUGFkTW9kdWxlIHsgfVxuIl19